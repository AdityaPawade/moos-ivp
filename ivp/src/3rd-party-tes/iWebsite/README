t. schneider tes@mit.edu 10.1.07
laboratory for autonomous marine sensing systems
massachusetts institute of technology 

readme for iWebsite:

this process is a program running under the MOOS robotic control
software system developed by paul newman:
http://www.robots.ox.ac.uk/%7Epnewman/TheMOOS/index.html

> compilation: type in the iWebsite directory

make

> usage:
iWebsite file.moos [name to register with moos]

an example .moos configuration file (with comments) is provided
in this directory.

this process may also be launched by pAntler.

> purpose:

WEBSERVER -> MOOSDB

the process serves as an interface between a webserver containing a text file
of values to be parsed into the moosdb that iWebsite is associated with.

this is essentially a fancy pEchoVar but where the variables to be copied
reside on a remote webserver in the form of a text file.

the program uses the linux process "wget" (which must be available) to
procure a text file from a given server and cached in a given local folder.
the text file is then parsed and values are echoed into the db based on the
configuration values. the program (by default) will not update the moosdb
unless a new sequence number (which may be a timestamp) is incremented in the 
remote file. please read the notes in the example iWebsite.moos file and the included
iWebsite.mission file (which is assumed to reside on the remove webserver).

LOCAL FILE -> WEBSERVER

iWebsite can also use SCP to transfer files from the local machine (the one
that iWebsite is running on) to a remote server. the local file specified by
the MOOS string "WEBSITE_PUT" is placed remotely in the directory specified
by "up_address" in the *.moos file.

this feature requires ssh access and secure keys to be in place (iWebsite 
cannot enter passwords).

> example:

WEBSERVER -> MOOSDB

someone (person or machine) places a text file containing key=value pairs 
on the remote website.

example iWebsite.mission:
*************************
# iWebsite test server side script
# this should be hosted at 'address' (the webserver)
# t. schneider tes@mit.edu 

# increment this to cause iWebsite to republish MOOS variables
sequence = 3

# values - anything not correlated with an 'echo' config value
# in the .moos block for iWebsite will be ignored!

# unquoted values will be assumed double
cat = 3.14

# quoted values will be stripped of quotes and put in as string
dog = "big dog"
*************************

assuming that we are using the *.moos file iWebsite.moos (available in this
folder), iWebsite will insert a double variable

TIGER	3.14

and a string

WOLF	big dog

into the MOOSDB that it is running on. note that the variable name is 
changed based on the *.moos file parameters (echo = cat -> tiger and
echo = dog -> wolf for this example).

if the configuration parameter ignore_sequence is false (the default),
iWebsite will NOT reparse this file until a new file with a higher sequence
number is placed on the website.

iWebsite.mission (new)
*************************
sequence = 3
cat = 2.7
dog = "really big dog"
*************************

will NOT be parsed into the MOOSDB is ignore_sequence is set to false.

however, 
*************************
sequence = 4
cat = 2.7
dog = "really big dog"
*************************

will cause iWebsite to insert these values:

(double)TIGER 	2.7
(string)WOLF	really big dog

the name of the sequence variable (here "sequence") is also configurable in
the *.moos file.

LOCAL FILE -> WEBSERVER

some process sets the MOOS variable
WEBSITE_PUT	/home/ruser/mission/data/datafile.txt

iWebsite attempts to put datafile.txt on the server
specified by up_address.

note that the server used to fetch from for commands need not be the same server
used to put files to. both features operate independently.